-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Parser.y
-----------------------------------------------------------------------------

state 24 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_getSyntaxTree -> program                    (0)
	program -> stmts                                   (1)
	stmts -> fundecl scs stmts                         (2)
	stmts -> vardecl scs ';' stmts                     (3)
	stmts -> expr scs ';' stmts                        (4)
	stmts -> fundecl scs                               (5)
	stmts -> vardecl scs                               (6)
	stmts -> expr scs                                  (7)
	scs -> scs ';'                                     (8)
	scs ->                                             (9)
	names -> names1                                    (10)
	names ->                                           (11)
	names1 -> names1 ',' NAME                          (12)
	names1 -> NAME                                     (13)
	body -> open stmts close                           (14)
	names_body -> names_open stmts close               (15)
	open -> '{'                                        (16)
	names_open -> '(' names ')' '{'                    (17)
	close -> '}'                                       (18)
	fundecl -> fun_NAME names_body                     (19)
	fundecl -> fun_OPNAME names_body                   (20)
	fun_NAME -> 'fun' NAME                             (21)
	fun_OPNAME -> 'fun' OPNAME                         (22)
	vardecl -> 'var' vardecls                          (23)
	vardecls -> declOrInit ',' vardecls                (24)
	vardecls -> declOrInit                             (25)
	declOrInit -> NAME                                 (26)
	declOrInit -> NAME '=' expr                        (27)
	OPNAME -> OP1                                      (28)
	OPNAME -> OP2                                      (29)
	OPNAME -> OP3                                      (30)
	OPNAME -> OP4                                      (31)
	OPNAME -> OP5                                      (32)
	OPNAME -> OP6                                      (33)
	OPNAME -> OP7                                      (34)
	expr -> 'return' expr                              (35)
	expr -> NAME '=' expr                              (36)
	expr -> 'go' body                                  (37)
	expr -> expr '||' expr                             (38)
	expr -> expr '&&' expr                             (39)
	expr -> '!' expr                                   (40)
	expr -> expr OP1 expr                              (41)
	expr -> expr OP2 expr                              (42)
	expr -> expr OP3 expr                              (43)
	expr -> expr OP4 expr                              (44)
	expr -> expr OP5 expr                              (45)
	expr -> expr OP6 expr                              (46)
	expr -> expr OP7 expr                              (47)
	expr -> OPNAME expr                                (48)
	expr -> NAME                                       (49)
	expr -> NAME '(' exprs ')'                         (50)
	expr -> expr '(' exprs ')'                         (51)
	expr -> LITERAL                                    (52)
	expr -> '(' expr ')'                               (53)
	expr -> ifcase elseifs elsecase                    (54)
	expr -> 'while' '(' expr ')' body                  (55)
	expr -> 'fun' names_body                           (56)
	ifcase -> 'if' '(' expr ')' body                   (57)
	elseifs -> 'elsif' '(' expr ')' body elseifs       (58)
	elseifs ->                                         (59)
	elsecase -> 'else' body                            (60)
	elsecase ->                                        (61)
	exprs -> exprs1                                    (62)
	exprs ->                                           (63)
	exprs1 -> expr ',' exprs1                          (64)
	exprs1 -> expr                                     (65)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'if'           { IF }
	'else'         { ELSE }
	'elsif'        { ELSIF }
	'while'        { WHILE }
	'var'          { VAR }
	'fun'          { FUN }
	'return'       { RETURN }
	'go'           { GO }
	'||'           { OR }
	'&&'           { AND }
	'!'            { NOT }
	OP1            { OP1     $$ }
	OP2            { OP2     $$ }
	OP3            { OP3     $$ }
	OP4            { OP4     $$ }
	OP5            { OP5     $$ }
	OP6            { OP6     $$ }
	OP7            { OP7     $$ }
	NAME           { NAME    $$ }
	LITERAL        { LITERAL $$ }
	'('            { DELIM '(' }
	')'            { DELIM ')' }
	'{'            { DELIM '{' }
	'}'            { DELIM '}' }
	','            { DELIM ',' }
	';'            { DELIM ';' }
	'='            { DELIM '=' }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_getSyntaxTree rule  0
	program         rule  1
	stmts           rules 2, 3, 4, 5, 6, 7
	scs             rules 8, 9
	names           rules 10, 11
	names1          rules 12, 13
	body            rule  14
	names_body      rule  15
	open            rule  16
	names_open      rule  17
	close           rule  18
	fundecl         rules 19, 20
	fun_NAME        rule  21
	fun_OPNAME      rule  22
	vardecl         rule  23
	vardecls        rules 24, 25
	declOrInit      rules 26, 27
	OPNAME          rules 28, 29, 30, 31, 32, 33, 34
	expr            rules 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
	ifcase          rule  57
	elseifs         rules 58, 59
	elsecase        rules 60, 61
	exprs           rules 62, 63
	exprs1          rules 64, 65

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_getSyntaxTree -> . program                   (rule 0)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'var'          shift, and enter state 12
	'fun'          shift, and enter state 13
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	program        goto state 27
	stmts          goto state 2
	fundecl        goto state 3
	fun_NAME       goto state 4
	fun_OPNAME     goto state 5
	vardecl        goto state 6
	OPNAME         goto state 7
	expr           goto state 8
	ifcase         goto state 9

State 1

	program -> . stmts                                  (rule 1)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'var'          shift, and enter state 12
	'fun'          shift, and enter state 13
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	stmts          goto state 2
	fundecl        goto state 3
	fun_NAME       goto state 4
	fun_OPNAME     goto state 5
	vardecl        goto state 6
	OPNAME         goto state 7
	expr           goto state 8
	ifcase         goto state 9

State 2

	program -> stmts .                                  (rule 1)

	%eof           reduce using rule 1


State 3

	stmts -> fundecl . scs stmts                        (rule 2)
	stmts -> fundecl . scs                              (rule 5)

	'if'           reduce using rule 9
	'while'        reduce using rule 9
	'var'          reduce using rule 9
	'fun'          reduce using rule 9
	'return'       reduce using rule 9
	'go'           reduce using rule 9
	'!'            reduce using rule 9
	OP1            reduce using rule 9
	OP2            reduce using rule 9
	OP3            reduce using rule 9
	OP4            reduce using rule 9
	OP5            reduce using rule 9
	OP6            reduce using rule 9
	OP7            reduce using rule 9
	NAME           reduce using rule 9
	LITERAL        reduce using rule 9
	'('            reduce using rule 9
	'}'            reduce using rule 9
	';'            reduce using rule 9
	%eof           reduce using rule 9

	scs            goto state 64

State 4

	fundecl -> fun_NAME . names_body                    (rule 19)

	'('            shift, and enter state 41

	names_body     goto state 63
	names_open     goto state 38

State 5

	fundecl -> fun_OPNAME . names_body                  (rule 20)

	'('            shift, and enter state 41

	names_body     goto state 62
	names_open     goto state 38

State 6

	stmts -> vardecl . scs ';' stmts                    (rule 3)
	stmts -> vardecl . scs                              (rule 6)

	'}'            reduce using rule 9
	';'            reduce using rule 9
	%eof           reduce using rule 9

	scs            goto state 61

State 7

	expr -> OPNAME . expr                               (rule 48)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 60
	ifcase         goto state 9

State 8

	stmts -> expr . scs ';' stmts                       (rule 4)
	stmts -> expr . scs                                 (rule 7)
	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           shift, and enter state 50
	'&&'           shift, and enter state 51
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            shift, and enter state 59
	'}'            reduce using rule 9
	';'            reduce using rule 9
	%eof           reduce using rule 9

	scs            goto state 49

State 9

	expr -> ifcase . elseifs elsecase                   (rule 54)

	'else'         reduce using rule 59
	'elsif'        shift, and enter state 48
	'||'           reduce using rule 59
	'&&'           reduce using rule 59
	OP1            reduce using rule 59
	OP2            reduce using rule 59
	OP3            reduce using rule 59
	OP4            reduce using rule 59
	OP5            reduce using rule 59
	OP6            reduce using rule 59
	OP7            reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'}'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	%eof           reduce using rule 59

	elseifs        goto state 47

State 10

	ifcase -> 'if' . '(' expr ')' body                  (rule 57)

	'('            shift, and enter state 46


State 11

	expr -> 'while' . '(' expr ')' body                 (rule 55)

	'('            shift, and enter state 45


State 12

	vardecl -> 'var' . vardecls                         (rule 23)

	NAME           shift, and enter state 44

	vardecls       goto state 42
	declOrInit     goto state 43

State 13

	fun_NAME -> 'fun' . NAME                            (rule 21)
	fun_OPNAME -> 'fun' . OPNAME                        (rule 22)
	expr -> 'fun' . names_body                          (rule 56)

	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 40
	'('            shift, and enter state 41

	names_body     goto state 37
	names_open     goto state 38
	OPNAME         goto state 39

State 14

	expr -> 'return' . expr                             (rule 35)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 36
	ifcase         goto state 9

State 15

	expr -> 'go' . body                                 (rule 37)

	'{'            shift, and enter state 35

	body           goto state 33
	open           goto state 34

State 16

	expr -> '!' . expr                                  (rule 40)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 32
	ifcase         goto state 9

State 17

	OPNAME -> OP1 .                                     (rule 28)

	'if'           reduce using rule 28
	'while'        reduce using rule 28
	'fun'          reduce using rule 28
	'return'       reduce using rule 28
	'go'           reduce using rule 28
	'!'            reduce using rule 28
	OP1            reduce using rule 28
	OP2            reduce using rule 28
	OP3            reduce using rule 28
	OP4            reduce using rule 28
	OP5            reduce using rule 28
	OP6            reduce using rule 28
	OP7            reduce using rule 28
	NAME           reduce using rule 28
	LITERAL        reduce using rule 28
	'('            reduce using rule 28


State 18

	OPNAME -> OP2 .                                     (rule 29)

	'if'           reduce using rule 29
	'while'        reduce using rule 29
	'fun'          reduce using rule 29
	'return'       reduce using rule 29
	'go'           reduce using rule 29
	'!'            reduce using rule 29
	OP1            reduce using rule 29
	OP2            reduce using rule 29
	OP3            reduce using rule 29
	OP4            reduce using rule 29
	OP5            reduce using rule 29
	OP6            reduce using rule 29
	OP7            reduce using rule 29
	NAME           reduce using rule 29
	LITERAL        reduce using rule 29
	'('            reduce using rule 29


State 19

	OPNAME -> OP3 .                                     (rule 30)

	'if'           reduce using rule 30
	'while'        reduce using rule 30
	'fun'          reduce using rule 30
	'return'       reduce using rule 30
	'go'           reduce using rule 30
	'!'            reduce using rule 30
	OP1            reduce using rule 30
	OP2            reduce using rule 30
	OP3            reduce using rule 30
	OP4            reduce using rule 30
	OP5            reduce using rule 30
	OP6            reduce using rule 30
	OP7            reduce using rule 30
	NAME           reduce using rule 30
	LITERAL        reduce using rule 30
	'('            reduce using rule 30


State 20

	OPNAME -> OP4 .                                     (rule 31)

	'if'           reduce using rule 31
	'while'        reduce using rule 31
	'fun'          reduce using rule 31
	'return'       reduce using rule 31
	'go'           reduce using rule 31
	'!'            reduce using rule 31
	OP1            reduce using rule 31
	OP2            reduce using rule 31
	OP3            reduce using rule 31
	OP4            reduce using rule 31
	OP5            reduce using rule 31
	OP6            reduce using rule 31
	OP7            reduce using rule 31
	NAME           reduce using rule 31
	LITERAL        reduce using rule 31
	'('            reduce using rule 31


State 21

	OPNAME -> OP5 .                                     (rule 32)

	'if'           reduce using rule 32
	'while'        reduce using rule 32
	'fun'          reduce using rule 32
	'return'       reduce using rule 32
	'go'           reduce using rule 32
	'!'            reduce using rule 32
	OP1            reduce using rule 32
	OP2            reduce using rule 32
	OP3            reduce using rule 32
	OP4            reduce using rule 32
	OP5            reduce using rule 32
	OP6            reduce using rule 32
	OP7            reduce using rule 32
	NAME           reduce using rule 32
	LITERAL        reduce using rule 32
	'('            reduce using rule 32


State 22

	OPNAME -> OP6 .                                     (rule 33)

	'if'           reduce using rule 33
	'while'        reduce using rule 33
	'fun'          reduce using rule 33
	'return'       reduce using rule 33
	'go'           reduce using rule 33
	'!'            reduce using rule 33
	OP1            reduce using rule 33
	OP2            reduce using rule 33
	OP3            reduce using rule 33
	OP4            reduce using rule 33
	OP5            reduce using rule 33
	OP6            reduce using rule 33
	OP7            reduce using rule 33
	NAME           reduce using rule 33
	LITERAL        reduce using rule 33
	'('            reduce using rule 33


State 23

	OPNAME -> OP7 .                                     (rule 34)

	'if'           reduce using rule 34
	'while'        reduce using rule 34
	'fun'          reduce using rule 34
	'return'       reduce using rule 34
	'go'           reduce using rule 34
	'!'            reduce using rule 34
	OP1            reduce using rule 34
	OP2            reduce using rule 34
	OP3            reduce using rule 34
	OP4            reduce using rule 34
	OP5            reduce using rule 34
	OP6            reduce using rule 34
	OP7            reduce using rule 34
	NAME           reduce using rule 34
	LITERAL        reduce using rule 34
	'('            reduce using rule 34


State 24

	expr -> NAME . '=' expr                             (rule 36)
	expr -> NAME .                                      (rule 49)
	expr -> NAME . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 49
	'&&'           reduce using rule 49
	OP1            reduce using rule 49
	OP2            reduce using rule 49
	OP3            reduce using rule 49
	OP4            reduce using rule 49
	OP5            reduce using rule 49
	OP6            reduce using rule 49
	OP7            reduce using rule 49
	'('            shift, and enter state 30
			(reduce using rule 49)

	')'            reduce using rule 49
	'}'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	'='            shift, and enter state 31
	%eof           reduce using rule 49


State 25

	expr -> LITERAL .                                   (rule 52)

	'||'           reduce using rule 52
	'&&'           reduce using rule 52
	OP1            reduce using rule 52
	OP2            reduce using rule 52
	OP3            reduce using rule 52
	OP4            reduce using rule 52
	OP5            reduce using rule 52
	OP6            reduce using rule 52
	OP7            reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'}'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	%eof           reduce using rule 52


State 26

	expr -> '(' . expr ')'                              (rule 53)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 28
	ifcase         goto state 9

State 27

	%start_getSyntaxTree -> program .                   (rule 0)

	%eof           accept


State 28

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)
	expr -> '(' expr . ')'                              (rule 53)

	'||'           shift, and enter state 50
	'&&'           shift, and enter state 51
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            shift, and enter state 59
	')'            shift, and enter state 95


State 29

	expr -> 'fun' . names_body                          (rule 56)

	'('            shift, and enter state 41

	names_body     goto state 37
	names_open     goto state 38

State 30

	expr -> NAME '(' . exprs ')'                        (rule 50)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26
	')'            reduce using rule 63

	OPNAME         goto state 7
	expr           goto state 68
	ifcase         goto state 9
	exprs          goto state 94
	exprs1         goto state 70

State 31

	expr -> NAME '=' . expr                             (rule 36)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 93
	ifcase         goto state 9

State 32

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> '!' expr .                                  (rule 40)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 40
	'&&'           reduce using rule 40
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            reduce using rule 40
	')'            reduce using rule 40
	'}'            reduce using rule 40
	','            reduce using rule 40
	';'            reduce using rule 40
	%eof           reduce using rule 40


State 33

	expr -> 'go' body .                                 (rule 37)

	'||'           reduce using rule 37
	'&&'           reduce using rule 37
	OP1            reduce using rule 37
	OP2            reduce using rule 37
	OP3            reduce using rule 37
	OP4            reduce using rule 37
	OP5            reduce using rule 37
	OP6            reduce using rule 37
	OP7            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'}'            reduce using rule 37
	','            reduce using rule 37
	';'            reduce using rule 37
	%eof           reduce using rule 37


State 34

	body -> open . stmts close                          (rule 14)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'var'          shift, and enter state 12
	'fun'          shift, and enter state 13
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	stmts          goto state 92
	fundecl        goto state 3
	fun_NAME       goto state 4
	fun_OPNAME     goto state 5
	vardecl        goto state 6
	OPNAME         goto state 7
	expr           goto state 8
	ifcase         goto state 9

State 35

	open -> '{' .                                       (rule 16)

	'if'           reduce using rule 16
	'while'        reduce using rule 16
	'var'          reduce using rule 16
	'fun'          reduce using rule 16
	'return'       reduce using rule 16
	'go'           reduce using rule 16
	'!'            reduce using rule 16
	OP1            reduce using rule 16
	OP2            reduce using rule 16
	OP3            reduce using rule 16
	OP4            reduce using rule 16
	OP5            reduce using rule 16
	OP6            reduce using rule 16
	OP7            reduce using rule 16
	NAME           reduce using rule 16
	LITERAL        reduce using rule 16
	'('            reduce using rule 16


State 36

	expr -> 'return' expr .                             (rule 35)
	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           shift, and enter state 50
	'&&'           shift, and enter state 51
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 35
	'}'            reduce using rule 35
	','            reduce using rule 35
	';'            reduce using rule 35
	%eof           reduce using rule 35


State 37

	expr -> 'fun' names_body .                          (rule 56)

	'||'           reduce using rule 56
	'&&'           reduce using rule 56
	OP1            reduce using rule 56
	OP2            reduce using rule 56
	OP3            reduce using rule 56
	OP4            reduce using rule 56
	OP5            reduce using rule 56
	OP6            reduce using rule 56
	OP7            reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'}'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	%eof           reduce using rule 56


State 38

	names_body -> names_open . stmts close              (rule 15)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'var'          shift, and enter state 12
	'fun'          shift, and enter state 13
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	stmts          goto state 91
	fundecl        goto state 3
	fun_NAME       goto state 4
	fun_OPNAME     goto state 5
	vardecl        goto state 6
	OPNAME         goto state 7
	expr           goto state 8
	ifcase         goto state 9

State 39

	fun_OPNAME -> 'fun' OPNAME .                        (rule 22)

	'('            reduce using rule 22


State 40

	fun_NAME -> 'fun' NAME .                            (rule 21)

	'('            reduce using rule 21


State 41

	names_open -> '(' . names ')' '{'                   (rule 17)

	NAME           shift, and enter state 90
	')'            reduce using rule 11

	names          goto state 88
	names1         goto state 89

State 42

	vardecl -> 'var' vardecls .                         (rule 23)

	'}'            reduce using rule 23
	';'            reduce using rule 23
	%eof           reduce using rule 23


State 43

	vardecls -> declOrInit . ',' vardecls               (rule 24)
	vardecls -> declOrInit .                            (rule 25)

	'}'            reduce using rule 25
	','            shift, and enter state 87
	';'            reduce using rule 25
	%eof           reduce using rule 25


State 44

	declOrInit -> NAME .                                (rule 26)
	declOrInit -> NAME . '=' expr                       (rule 27)

	'}'            reduce using rule 26
	','            reduce using rule 26
	';'            reduce using rule 26
	'='            shift, and enter state 86
	%eof           reduce using rule 26


State 45

	expr -> 'while' '(' . expr ')' body                 (rule 55)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 85
	ifcase         goto state 9

State 46

	ifcase -> 'if' '(' . expr ')' body                  (rule 57)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 84
	ifcase         goto state 9

State 47

	expr -> ifcase elseifs . elsecase                   (rule 54)

	'else'         shift, and enter state 83
	'||'           reduce using rule 61
	'&&'           reduce using rule 61
	OP1            reduce using rule 61
	OP2            reduce using rule 61
	OP3            reduce using rule 61
	OP4            reduce using rule 61
	OP5            reduce using rule 61
	OP6            reduce using rule 61
	OP7            reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'}'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	%eof           reduce using rule 61

	elsecase       goto state 82

State 48

	elseifs -> 'elsif' . '(' expr ')' body elseifs      (rule 58)

	'('            shift, and enter state 81


State 49

	stmts -> expr scs . ';' stmts                       (rule 4)
	stmts -> expr scs .                                 (rule 7)
	scs -> scs . ';'                                    (rule 8)

	'}'            reduce using rule 7
	';'            shift, and enter state 80
	%eof           reduce using rule 7


State 50

	expr -> expr '||' . expr                            (rule 38)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 79
	ifcase         goto state 9

State 51

	expr -> expr '&&' . expr                            (rule 39)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 78
	ifcase         goto state 9

State 52

	expr -> expr OP1 . expr                             (rule 41)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 77
	ifcase         goto state 9

State 53

	expr -> expr OP2 . expr                             (rule 42)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 76
	ifcase         goto state 9

State 54

	expr -> expr OP3 . expr                             (rule 43)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 75
	ifcase         goto state 9

State 55

	expr -> expr OP4 . expr                             (rule 44)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 74
	ifcase         goto state 9

State 56

	expr -> expr OP5 . expr                             (rule 45)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 73
	ifcase         goto state 9

State 57

	expr -> expr OP6 . expr                             (rule 46)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 72
	ifcase         goto state 9

State 58

	expr -> expr OP7 . expr                             (rule 47)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 71
	ifcase         goto state 9

State 59

	expr -> expr '(' . exprs ')'                        (rule 51)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26
	')'            reduce using rule 63

	OPNAME         goto state 7
	expr           goto state 68
	ifcase         goto state 9
	exprs          goto state 69
	exprs1         goto state 70

State 60

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> OPNAME expr .                               (rule 48)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 48
	'&&'           reduce using rule 48
	OP1            reduce using rule 48
	OP2            reduce using rule 48
	OP3            reduce using rule 48
	OP4            reduce using rule 48
	OP5            reduce using rule 48
	OP6            reduce using rule 48
	OP7            reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'}'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	%eof           reduce using rule 48


State 61

	stmts -> vardecl scs . ';' stmts                    (rule 3)
	stmts -> vardecl scs .                              (rule 6)
	scs -> scs . ';'                                    (rule 8)

	'}'            reduce using rule 6
	';'            shift, and enter state 67
	%eof           reduce using rule 6


State 62

	fundecl -> fun_OPNAME names_body .                  (rule 20)

	'if'           reduce using rule 20
	'while'        reduce using rule 20
	'var'          reduce using rule 20
	'fun'          reduce using rule 20
	'return'       reduce using rule 20
	'go'           reduce using rule 20
	'!'            reduce using rule 20
	OP1            reduce using rule 20
	OP2            reduce using rule 20
	OP3            reduce using rule 20
	OP4            reduce using rule 20
	OP5            reduce using rule 20
	OP6            reduce using rule 20
	OP7            reduce using rule 20
	NAME           reduce using rule 20
	LITERAL        reduce using rule 20
	'('            reduce using rule 20
	'}'            reduce using rule 20
	';'            reduce using rule 20
	%eof           reduce using rule 20


State 63

	fundecl -> fun_NAME names_body .                    (rule 19)

	'if'           reduce using rule 19
	'while'        reduce using rule 19
	'var'          reduce using rule 19
	'fun'          reduce using rule 19
	'return'       reduce using rule 19
	'go'           reduce using rule 19
	'!'            reduce using rule 19
	OP1            reduce using rule 19
	OP2            reduce using rule 19
	OP3            reduce using rule 19
	OP4            reduce using rule 19
	OP5            reduce using rule 19
	OP6            reduce using rule 19
	OP7            reduce using rule 19
	NAME           reduce using rule 19
	LITERAL        reduce using rule 19
	'('            reduce using rule 19
	'}'            reduce using rule 19
	';'            reduce using rule 19
	%eof           reduce using rule 19


State 64

	stmts -> fundecl scs . stmts                        (rule 2)
	stmts -> fundecl scs .                              (rule 5)
	scs -> scs . ';'                                    (rule 8)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'var'          shift, and enter state 12
	'fun'          shift, and enter state 13
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26
	'}'            reduce using rule 5
	';'            shift, and enter state 66
	%eof           reduce using rule 5

	stmts          goto state 65
	fundecl        goto state 3
	fun_NAME       goto state 4
	fun_OPNAME     goto state 5
	vardecl        goto state 6
	OPNAME         goto state 7
	expr           goto state 8
	ifcase         goto state 9

State 65

	stmts -> fundecl scs stmts .                        (rule 2)

	'}'            reduce using rule 2
	%eof           reduce using rule 2


State 66

	scs -> scs ';' .                                    (rule 8)

	'if'           reduce using rule 8
	'while'        reduce using rule 8
	'var'          reduce using rule 8
	'fun'          reduce using rule 8
	'return'       reduce using rule 8
	'go'           reduce using rule 8
	'!'            reduce using rule 8
	OP1            reduce using rule 8
	OP2            reduce using rule 8
	OP3            reduce using rule 8
	OP4            reduce using rule 8
	OP5            reduce using rule 8
	OP6            reduce using rule 8
	OP7            reduce using rule 8
	NAME           reduce using rule 8
	LITERAL        reduce using rule 8
	'('            reduce using rule 8
	'}'            reduce using rule 8
	';'            reduce using rule 8
	%eof           reduce using rule 8


State 67

	stmts -> vardecl scs ';' . stmts                    (rule 3)
	scs -> scs ';' .                                    (rule 8)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'var'          shift, and enter state 12
	'fun'          shift, and enter state 13
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26
	'}'            reduce using rule 8
	';'            reduce using rule 8
	%eof           reduce using rule 8

	stmts          goto state 111
	fundecl        goto state 3
	fun_NAME       goto state 4
	fun_OPNAME     goto state 5
	vardecl        goto state 6
	OPNAME         goto state 7
	expr           goto state 8
	ifcase         goto state 9

State 68

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)
	exprs1 -> expr . ',' exprs1                         (rule 64)
	exprs1 -> expr .                                    (rule 65)

	'||'           shift, and enter state 50
	'&&'           shift, and enter state 51
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 65
	','            shift, and enter state 110


State 69

	expr -> expr '(' exprs . ')'                        (rule 51)

	')'            shift, and enter state 109


State 70

	exprs -> exprs1 .                                   (rule 62)

	')'            reduce using rule 62


State 71

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr OP7 expr .                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 47
	'&&'           reduce using rule 47
	OP1            reduce using rule 47
	OP2            reduce using rule 47
	OP3            reduce using rule 47
	OP4            reduce using rule 47
	OP5            reduce using rule 47
	OP6            reduce using rule 47
	OP7            reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'}'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	%eof           reduce using rule 47


State 72

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr OP6 expr .                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 46
	'&&'           reduce using rule 46
	OP1            reduce using rule 46
	OP2            reduce using rule 46
	OP3            reduce using rule 46
	OP4            reduce using rule 46
	OP5            reduce using rule 46
	OP6            reduce using rule 46
	OP7            shift, and enter state 58
	'('            reduce using rule 46
	')'            reduce using rule 46
	'}'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	%eof           reduce using rule 46


State 73

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr OP5 expr .                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 45
	'&&'           reduce using rule 45
	OP1            reduce using rule 45
	OP2            reduce using rule 45
	OP3            reduce using rule 45
	OP4            reduce using rule 45
	OP5            reduce using rule 45
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            reduce using rule 45
	')'            reduce using rule 45
	'}'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	%eof           reduce using rule 45


State 74

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr OP4 expr .                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 44
	'&&'           reduce using rule 44
	OP1            reduce using rule 44
	OP2            reduce using rule 44
	OP3            reduce using rule 44
	OP4            reduce using rule 44
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            reduce using rule 44
	')'            reduce using rule 44
	'}'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	%eof           reduce using rule 44


State 75

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr OP3 expr .                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 43
	'&&'           reduce using rule 43
	OP1            reduce using rule 43
	OP2            reduce using rule 43
	OP3            reduce using rule 43
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            reduce using rule 43
	')'            reduce using rule 43
	'}'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	%eof           reduce using rule 43


State 76

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr OP2 expr .                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 42
	'&&'           reduce using rule 42
	OP1            reduce using rule 42
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            reduce using rule 42
	')'            reduce using rule 42
	'}'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	%eof           reduce using rule 42


State 77

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr OP1 expr .                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 41
	'&&'           reduce using rule 41
	OP1            reduce using rule 41
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            reduce using rule 41
	')'            reduce using rule 41
	'}'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	%eof           reduce using rule 41


State 78

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr '&&' expr .                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 39
	'&&'           reduce using rule 39
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            reduce using rule 39
	')'            reduce using rule 39
	'}'            reduce using rule 39
	','            reduce using rule 39
	';'            reduce using rule 39
	%eof           reduce using rule 39


State 79

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr '||' expr .                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           reduce using rule 38
	'&&'           shift, and enter state 51
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            reduce using rule 38
	')'            reduce using rule 38
	'}'            reduce using rule 38
	','            reduce using rule 38
	';'            reduce using rule 38
	%eof           reduce using rule 38


State 80

	stmts -> expr scs ';' . stmts                       (rule 4)
	scs -> scs ';' .                                    (rule 8)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'var'          shift, and enter state 12
	'fun'          shift, and enter state 13
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26
	'}'            reduce using rule 8
	';'            reduce using rule 8
	%eof           reduce using rule 8

	stmts          goto state 108
	fundecl        goto state 3
	fun_NAME       goto state 4
	fun_OPNAME     goto state 5
	vardecl        goto state 6
	OPNAME         goto state 7
	expr           goto state 8
	ifcase         goto state 9

State 81

	elseifs -> 'elsif' '(' . expr ')' body elseifs      (rule 58)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 107
	ifcase         goto state 9

State 82

	expr -> ifcase elseifs elsecase .                   (rule 54)

	'||'           reduce using rule 54
	'&&'           reduce using rule 54
	OP1            reduce using rule 54
	OP2            reduce using rule 54
	OP3            reduce using rule 54
	OP4            reduce using rule 54
	OP5            reduce using rule 54
	OP6            reduce using rule 54
	OP7            reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'}'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	%eof           reduce using rule 54


State 83

	elsecase -> 'else' . body                           (rule 60)

	'{'            shift, and enter state 35

	body           goto state 106
	open           goto state 34

State 84

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)
	ifcase -> 'if' '(' expr . ')' body                  (rule 57)

	'||'           shift, and enter state 50
	'&&'           shift, and enter state 51
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            shift, and enter state 59
	')'            shift, and enter state 105


State 85

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)
	expr -> 'while' '(' expr . ')' body                 (rule 55)

	'||'           shift, and enter state 50
	'&&'           shift, and enter state 51
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            shift, and enter state 59
	')'            shift, and enter state 104


State 86

	declOrInit -> NAME '=' . expr                       (rule 27)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 103
	ifcase         goto state 9

State 87

	vardecls -> declOrInit ',' . vardecls               (rule 24)

	NAME           shift, and enter state 44

	vardecls       goto state 102
	declOrInit     goto state 43

State 88

	names_open -> '(' names . ')' '{'                   (rule 17)

	')'            shift, and enter state 101


State 89

	names -> names1 .                                   (rule 10)
	names1 -> names1 . ',' NAME                         (rule 12)

	')'            reduce using rule 10
	','            shift, and enter state 100


State 90

	names1 -> NAME .                                    (rule 13)

	')'            reduce using rule 13
	','            reduce using rule 13


State 91

	names_body -> names_open stmts . close              (rule 15)

	'}'            shift, and enter state 98

	close          goto state 99

State 92

	body -> open stmts . close                          (rule 14)

	'}'            shift, and enter state 98

	close          goto state 97

State 93

	expr -> NAME '=' expr .                             (rule 36)
	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           shift, and enter state 50
	'&&'           shift, and enter state 51
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 36
	'}'            reduce using rule 36
	','            reduce using rule 36
	';'            reduce using rule 36
	%eof           reduce using rule 36


State 94

	expr -> NAME '(' exprs . ')'                        (rule 50)

	')'            shift, and enter state 96


State 95

	expr -> '(' expr ')' .                              (rule 53)

	'||'           reduce using rule 53
	'&&'           reduce using rule 53
	OP1            reduce using rule 53
	OP2            reduce using rule 53
	OP3            reduce using rule 53
	OP4            reduce using rule 53
	OP5            reduce using rule 53
	OP6            reduce using rule 53
	OP7            reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'}'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	%eof           reduce using rule 53


State 96

	expr -> NAME '(' exprs ')' .                        (rule 50)

	'||'           reduce using rule 50
	'&&'           reduce using rule 50
	OP1            reduce using rule 50
	OP2            reduce using rule 50
	OP3            reduce using rule 50
	OP4            reduce using rule 50
	OP5            reduce using rule 50
	OP6            reduce using rule 50
	OP7            reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'}'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	%eof           reduce using rule 50


State 97

	body -> open stmts close .                          (rule 14)

	'else'         reduce using rule 14
	'elsif'        reduce using rule 14
	'||'           reduce using rule 14
	'&&'           reduce using rule 14
	OP1            reduce using rule 14
	OP2            reduce using rule 14
	OP3            reduce using rule 14
	OP4            reduce using rule 14
	OP5            reduce using rule 14
	OP6            reduce using rule 14
	OP7            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	'}'            reduce using rule 14
	','            reduce using rule 14
	';'            reduce using rule 14
	%eof           reduce using rule 14


State 98

	close -> '}' .                                      (rule 18)

	'if'           reduce using rule 18
	'else'         reduce using rule 18
	'elsif'        reduce using rule 18
	'while'        reduce using rule 18
	'var'          reduce using rule 18
	'fun'          reduce using rule 18
	'return'       reduce using rule 18
	'go'           reduce using rule 18
	'||'           reduce using rule 18
	'&&'           reduce using rule 18
	'!'            reduce using rule 18
	OP1            reduce using rule 18
	OP2            reduce using rule 18
	OP3            reduce using rule 18
	OP4            reduce using rule 18
	OP5            reduce using rule 18
	OP6            reduce using rule 18
	OP7            reduce using rule 18
	NAME           reduce using rule 18
	LITERAL        reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'}'            reduce using rule 18
	','            reduce using rule 18
	';'            reduce using rule 18
	%eof           reduce using rule 18


State 99

	names_body -> names_open stmts close .              (rule 15)

	'if'           reduce using rule 15
	'while'        reduce using rule 15
	'var'          reduce using rule 15
	'fun'          reduce using rule 15
	'return'       reduce using rule 15
	'go'           reduce using rule 15
	'||'           reduce using rule 15
	'&&'           reduce using rule 15
	'!'            reduce using rule 15
	OP1            reduce using rule 15
	OP2            reduce using rule 15
	OP3            reduce using rule 15
	OP4            reduce using rule 15
	OP5            reduce using rule 15
	OP6            reduce using rule 15
	OP7            reduce using rule 15
	NAME           reduce using rule 15
	LITERAL        reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	'}'            reduce using rule 15
	','            reduce using rule 15
	';'            reduce using rule 15
	%eof           reduce using rule 15


State 100

	names1 -> names1 ',' . NAME                         (rule 12)

	NAME           shift, and enter state 117


State 101

	names_open -> '(' names ')' . '{'                   (rule 17)

	'{'            shift, and enter state 116


State 102

	vardecls -> declOrInit ',' vardecls .               (rule 24)

	'}'            reduce using rule 24
	';'            reduce using rule 24
	%eof           reduce using rule 24


State 103

	declOrInit -> NAME '=' expr .                       (rule 27)
	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)

	'||'           shift, and enter state 50
	'&&'           shift, and enter state 51
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            shift, and enter state 59
	'}'            reduce using rule 27
	','            reduce using rule 27
	';'            reduce using rule 27
	%eof           reduce using rule 27


State 104

	expr -> 'while' '(' expr ')' . body                 (rule 55)

	'{'            shift, and enter state 35

	body           goto state 115
	open           goto state 34

State 105

	ifcase -> 'if' '(' expr ')' . body                  (rule 57)

	'{'            shift, and enter state 35

	body           goto state 114
	open           goto state 34

State 106

	elsecase -> 'else' body .                           (rule 60)

	'||'           reduce using rule 60
	'&&'           reduce using rule 60
	OP1            reduce using rule 60
	OP2            reduce using rule 60
	OP3            reduce using rule 60
	OP4            reduce using rule 60
	OP5            reduce using rule 60
	OP6            reduce using rule 60
	OP7            reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'}'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	%eof           reduce using rule 60


State 107

	expr -> expr . '||' expr                            (rule 38)
	expr -> expr . '&&' expr                            (rule 39)
	expr -> expr . OP1 expr                             (rule 41)
	expr -> expr . OP2 expr                             (rule 42)
	expr -> expr . OP3 expr                             (rule 43)
	expr -> expr . OP4 expr                             (rule 44)
	expr -> expr . OP5 expr                             (rule 45)
	expr -> expr . OP6 expr                             (rule 46)
	expr -> expr . OP7 expr                             (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 51)
	elseifs -> 'elsif' '(' expr . ')' body elseifs      (rule 58)

	'||'           shift, and enter state 50
	'&&'           shift, and enter state 51
	OP1            shift, and enter state 52
	OP2            shift, and enter state 53
	OP3            shift, and enter state 54
	OP4            shift, and enter state 55
	OP5            shift, and enter state 56
	OP6            shift, and enter state 57
	OP7            shift, and enter state 58
	'('            shift, and enter state 59
	')'            shift, and enter state 113


State 108

	stmts -> expr scs ';' stmts .                       (rule 4)

	'}'            reduce using rule 4
	%eof           reduce using rule 4


State 109

	expr -> expr '(' exprs ')' .                        (rule 51)

	'||'           reduce using rule 51
	'&&'           reduce using rule 51
	OP1            reduce using rule 51
	OP2            reduce using rule 51
	OP3            reduce using rule 51
	OP4            reduce using rule 51
	OP5            reduce using rule 51
	OP6            reduce using rule 51
	OP7            reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'}'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	%eof           reduce using rule 51


State 110

	exprs1 -> expr ',' . exprs1                         (rule 64)

	'if'           shift, and enter state 10
	'while'        shift, and enter state 11
	'fun'          shift, and enter state 29
	'return'       shift, and enter state 14
	'go'           shift, and enter state 15
	'!'            shift, and enter state 16
	OP1            shift, and enter state 17
	OP2            shift, and enter state 18
	OP3            shift, and enter state 19
	OP4            shift, and enter state 20
	OP5            shift, and enter state 21
	OP6            shift, and enter state 22
	OP7            shift, and enter state 23
	NAME           shift, and enter state 24
	LITERAL        shift, and enter state 25
	'('            shift, and enter state 26

	OPNAME         goto state 7
	expr           goto state 68
	ifcase         goto state 9
	exprs1         goto state 112

State 111

	stmts -> vardecl scs ';' stmts .                    (rule 3)

	'}'            reduce using rule 3
	%eof           reduce using rule 3


State 112

	exprs1 -> expr ',' exprs1 .                         (rule 64)

	')'            reduce using rule 64


State 113

	elseifs -> 'elsif' '(' expr ')' . body elseifs      (rule 58)

	'{'            shift, and enter state 35

	body           goto state 118
	open           goto state 34

State 114

	ifcase -> 'if' '(' expr ')' body .                  (rule 57)

	'else'         reduce using rule 57
	'elsif'        reduce using rule 57
	'||'           reduce using rule 57
	'&&'           reduce using rule 57
	OP1            reduce using rule 57
	OP2            reduce using rule 57
	OP3            reduce using rule 57
	OP4            reduce using rule 57
	OP5            reduce using rule 57
	OP6            reduce using rule 57
	OP7            reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'}'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	%eof           reduce using rule 57


State 115

	expr -> 'while' '(' expr ')' body .                 (rule 55)

	'||'           reduce using rule 55
	'&&'           reduce using rule 55
	OP1            reduce using rule 55
	OP2            reduce using rule 55
	OP3            reduce using rule 55
	OP4            reduce using rule 55
	OP5            reduce using rule 55
	OP6            reduce using rule 55
	OP7            reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'}'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	%eof           reduce using rule 55


State 116

	names_open -> '(' names ')' '{' .                   (rule 17)

	'if'           reduce using rule 17
	'while'        reduce using rule 17
	'var'          reduce using rule 17
	'fun'          reduce using rule 17
	'return'       reduce using rule 17
	'go'           reduce using rule 17
	'!'            reduce using rule 17
	OP1            reduce using rule 17
	OP2            reduce using rule 17
	OP3            reduce using rule 17
	OP4            reduce using rule 17
	OP5            reduce using rule 17
	OP6            reduce using rule 17
	OP7            reduce using rule 17
	NAME           reduce using rule 17
	LITERAL        reduce using rule 17
	'('            reduce using rule 17


State 117

	names1 -> names1 ',' NAME .                         (rule 12)

	')'            reduce using rule 12
	','            reduce using rule 12


State 118

	elseifs -> 'elsif' '(' expr ')' body . elseifs      (rule 58)

	'else'         reduce using rule 59
	'elsif'        shift, and enter state 48
	'||'           reduce using rule 59
	'&&'           reduce using rule 59
	OP1            reduce using rule 59
	OP2            reduce using rule 59
	OP3            reduce using rule 59
	OP4            reduce using rule 59
	OP5            reduce using rule 59
	OP6            reduce using rule 59
	OP7            reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'}'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	%eof           reduce using rule 59

	elseifs        goto state 119

State 119

	elseifs -> 'elsif' '(' expr ')' body elseifs .      (rule 58)

	'else'         reduce using rule 58
	'||'           reduce using rule 58
	'&&'           reduce using rule 58
	OP1            reduce using rule 58
	OP2            reduce using rule 58
	OP3            reduce using rule 58
	OP4            reduce using rule 58
	OP5            reduce using rule 58
	OP6            reduce using rule 58
	OP7            reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'}'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	%eof           reduce using rule 58


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 66
Number of terminals: 27
Number of non-terminals: 24
Number of states: 120
