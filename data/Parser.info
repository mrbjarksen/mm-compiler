-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Parser.y
-----------------------------------------------------------------------------

state 25 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_getSyntaxTree -> program                    (0)
	program -> stmts                                   (1)
	stmts -> stmt scs ';' stmts                        (2)
	stmts -> stmt scs                                  (3)
	stmt -> fundecl                                    (4)
	stmt -> vardecl                                    (5)
	stmt -> expr                                       (6)
	scs -> scs ';'                                     (7)
	scs ->                                             (8)
	names -> names1                                    (9)
	names ->                                           (10)
	names1 -> names1 ',' NAME                          (11)
	names1 -> NAME                                     (12)
	body -> open stmts close                           (13)
	names_body -> names_open stmts close               (14)
	open -> '{'                                        (15)
	names_open -> '(' names ')' '{'                    (16)
	close -> '}'                                       (17)
	fundecl -> fun_NAME names_body                     (18)
	fundecl -> fun_OPNAME names_body                   (19)
	fun_NAME -> 'fun' NAME                             (20)
	fun_OPNAME -> 'fun' OPNAME                         (21)
	vardecl -> 'var' vardecls                          (22)
	vardecls -> declOrInit ',' vardecls                (23)
	vardecls -> declOrInit                             (24)
	declOrInit -> NAME                                 (25)
	declOrInit -> NAME '=' expr                        (26)
	OPNAME -> OP1                                      (27)
	OPNAME -> OP2                                      (28)
	OPNAME -> OP3                                      (29)
	OPNAME -> OP4                                      (30)
	OPNAME -> OP5                                      (31)
	OPNAME -> OP6                                      (32)
	OPNAME -> OP7                                      (33)
	expr -> 'return' expr                              (34)
	expr -> NAME '=' expr                              (35)
	expr -> 'go' body                                  (36)
	expr -> expr '||' expr                             (37)
	expr -> expr '&&' expr                             (38)
	expr -> '!' expr                                   (39)
	expr -> expr OP1 expr                              (40)
	expr -> expr OP2 expr                              (41)
	expr -> expr OP3 expr                              (42)
	expr -> expr OP4 expr                              (43)
	expr -> expr OP5 expr                              (44)
	expr -> expr OP6 expr                              (45)
	expr -> expr OP7 expr                              (46)
	expr -> OPNAME expr                                (47)
	expr -> NAME                                       (48)
	expr -> NAME '(' exprs ')'                         (49)
	expr -> expr '(' exprs ')'                         (50)
	expr -> LITERAL                                    (51)
	expr -> '[' exprs ']'                              (52)
	expr -> NUMBER                                     (53)
	expr -> '(' expr ')'                               (54)
	expr -> ifcase elseifs elsecase                    (55)
	expr -> 'while' '(' expr ')' body                  (56)
	expr -> 'fun' names_body                           (57)
	ifcase -> 'if' '(' expr ')' body                   (58)
	elseifs -> 'elsif' '(' expr ')' body elseifs       (59)
	elseifs ->                                         (60)
	elsecase -> 'else' body                            (61)
	elsecase ->                                        (62)
	exprs -> exprs1                                    (63)
	exprs ->                                           (64)
	exprs1 -> expr ',' exprs1                          (65)
	exprs1 -> expr                                     (66)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'if'           { IF }
	'else'         { ELSE }
	'elsif'        { ELSIF }
	'while'        { WHILE }
	'var'          { VAR }
	'fun'          { FUN }
	'return'       { RETURN }
	'go'           { GO }
	'||'           { OR }
	'&&'           { AND }
	'!'            { NOT }
	OP1            { OP1     $$ }
	OP2            { OP2     $$ }
	OP3            { OP3     $$ }
	OP4            { OP4     $$ }
	OP5            { OP5     $$ }
	OP6            { OP6     $$ }
	OP7            { OP7     $$ }
	NAME           { NAME    $$ }
	LITERAL        { LITERAL $$ }
	NUMBER         { NUMBER  $$ }
	'('            { DELIM '(' }
	')'            { DELIM ')' }
	'{'            { DELIM '{' }
	'}'            { DELIM '}' }
	'['            { DELIM '[' }
	']'            { DELIM ']' }
	','            { DELIM ',' }
	';'            { DELIM ';' }
	'='            { DELIM '=' }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_getSyntaxTree rule  0
	program         rule  1
	stmts           rules 2, 3
	stmt            rules 4, 5, 6
	scs             rules 7, 8
	names           rules 9, 10
	names1          rules 11, 12
	body            rule  13
	names_body      rule  14
	open            rule  15
	names_open      rule  16
	close           rule  17
	fundecl         rules 18, 19
	fun_NAME        rule  20
	fun_OPNAME      rule  21
	vardecl         rule  22
	vardecls        rules 23, 24
	declOrInit      rules 25, 26
	OPNAME          rules 27, 28, 29, 30, 31, 32, 33
	expr            rules 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57
	ifcase          rule  58
	elseifs         rules 59, 60
	elsecase        rules 61, 62
	exprs           rules 63, 64
	exprs1          rules 65, 66

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_getSyntaxTree -> . program                   (rule 0)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'var'          shift, and enter state 13
	'fun'          shift, and enter state 14
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	program        goto state 30
	stmts          goto state 2
	stmt           goto state 3
	fundecl        goto state 4
	fun_NAME       goto state 5
	fun_OPNAME     goto state 6
	vardecl        goto state 7
	OPNAME         goto state 8
	expr           goto state 9
	ifcase         goto state 10

State 1

	program -> . stmts                                  (rule 1)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'var'          shift, and enter state 13
	'fun'          shift, and enter state 14
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	stmts          goto state 2
	stmt           goto state 3
	fundecl        goto state 4
	fun_NAME       goto state 5
	fun_OPNAME     goto state 6
	vardecl        goto state 7
	OPNAME         goto state 8
	expr           goto state 9
	ifcase         goto state 10

State 2

	program -> stmts .                                  (rule 1)

	%eof           reduce using rule 1


State 3

	stmts -> stmt . scs ';' stmts                       (rule 2)
	stmts -> stmt . scs                                 (rule 3)

	'}'            reduce using rule 8
	';'            reduce using rule 8
	%eof           reduce using rule 8

	scs            goto state 68

State 4

	stmt -> fundecl .                                   (rule 4)

	'}'            reduce using rule 4
	';'            reduce using rule 4
	%eof           reduce using rule 4


State 5

	fundecl -> fun_NAME . names_body                    (rule 18)

	'('            shift, and enter state 47

	names_body     goto state 67
	names_open     goto state 44

State 6

	fundecl -> fun_OPNAME . names_body                  (rule 19)

	'('            shift, and enter state 47

	names_body     goto state 66
	names_open     goto state 44

State 7

	stmt -> vardecl .                                   (rule 5)

	'}'            reduce using rule 5
	';'            reduce using rule 5
	%eof           reduce using rule 5


State 8

	expr -> OPNAME . expr                               (rule 47)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 65
	ifcase         goto state 10

State 9

	stmt -> expr .                                      (rule 6)
	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           shift, and enter state 55
	'&&'           shift, and enter state 56
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            shift, and enter state 64
	'}'            reduce using rule 6
	';'            reduce using rule 6
	%eof           reduce using rule 6


State 10

	expr -> ifcase . elseifs elsecase                   (rule 55)

	'else'         reduce using rule 60
	'elsif'        shift, and enter state 54
	'||'           reduce using rule 60
	'&&'           reduce using rule 60
	OP1            reduce using rule 60
	OP2            reduce using rule 60
	OP3            reduce using rule 60
	OP4            reduce using rule 60
	OP5            reduce using rule 60
	OP6            reduce using rule 60
	OP7            reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'}'            reduce using rule 60
	']'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	%eof           reduce using rule 60

	elseifs        goto state 53

State 11

	ifcase -> 'if' . '(' expr ')' body                  (rule 58)

	'('            shift, and enter state 52


State 12

	expr -> 'while' . '(' expr ')' body                 (rule 56)

	'('            shift, and enter state 51


State 13

	vardecl -> 'var' . vardecls                         (rule 22)

	NAME           shift, and enter state 50

	vardecls       goto state 48
	declOrInit     goto state 49

State 14

	fun_NAME -> 'fun' . NAME                            (rule 20)
	fun_OPNAME -> 'fun' . OPNAME                        (rule 21)
	expr -> 'fun' . names_body                          (rule 57)

	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 46
	'('            shift, and enter state 47

	names_body     goto state 43
	names_open     goto state 44
	OPNAME         goto state 45

State 15

	expr -> 'return' . expr                             (rule 34)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 42
	ifcase         goto state 10

State 16

	expr -> 'go' . body                                 (rule 36)

	'{'            shift, and enter state 41

	body           goto state 39
	open           goto state 40

State 17

	expr -> '!' . expr                                  (rule 39)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 38
	ifcase         goto state 10

State 18

	OPNAME -> OP1 .                                     (rule 27)

	'if'           reduce using rule 27
	'while'        reduce using rule 27
	'fun'          reduce using rule 27
	'return'       reduce using rule 27
	'go'           reduce using rule 27
	'!'            reduce using rule 27
	OP1            reduce using rule 27
	OP2            reduce using rule 27
	OP3            reduce using rule 27
	OP4            reduce using rule 27
	OP5            reduce using rule 27
	OP6            reduce using rule 27
	OP7            reduce using rule 27
	NAME           reduce using rule 27
	LITERAL        reduce using rule 27
	NUMBER         reduce using rule 27
	'('            reduce using rule 27
	'['            reduce using rule 27


State 19

	OPNAME -> OP2 .                                     (rule 28)

	'if'           reduce using rule 28
	'while'        reduce using rule 28
	'fun'          reduce using rule 28
	'return'       reduce using rule 28
	'go'           reduce using rule 28
	'!'            reduce using rule 28
	OP1            reduce using rule 28
	OP2            reduce using rule 28
	OP3            reduce using rule 28
	OP4            reduce using rule 28
	OP5            reduce using rule 28
	OP6            reduce using rule 28
	OP7            reduce using rule 28
	NAME           reduce using rule 28
	LITERAL        reduce using rule 28
	NUMBER         reduce using rule 28
	'('            reduce using rule 28
	'['            reduce using rule 28


State 20

	OPNAME -> OP3 .                                     (rule 29)

	'if'           reduce using rule 29
	'while'        reduce using rule 29
	'fun'          reduce using rule 29
	'return'       reduce using rule 29
	'go'           reduce using rule 29
	'!'            reduce using rule 29
	OP1            reduce using rule 29
	OP2            reduce using rule 29
	OP3            reduce using rule 29
	OP4            reduce using rule 29
	OP5            reduce using rule 29
	OP6            reduce using rule 29
	OP7            reduce using rule 29
	NAME           reduce using rule 29
	LITERAL        reduce using rule 29
	NUMBER         reduce using rule 29
	'('            reduce using rule 29
	'['            reduce using rule 29


State 21

	OPNAME -> OP4 .                                     (rule 30)

	'if'           reduce using rule 30
	'while'        reduce using rule 30
	'fun'          reduce using rule 30
	'return'       reduce using rule 30
	'go'           reduce using rule 30
	'!'            reduce using rule 30
	OP1            reduce using rule 30
	OP2            reduce using rule 30
	OP3            reduce using rule 30
	OP4            reduce using rule 30
	OP5            reduce using rule 30
	OP6            reduce using rule 30
	OP7            reduce using rule 30
	NAME           reduce using rule 30
	LITERAL        reduce using rule 30
	NUMBER         reduce using rule 30
	'('            reduce using rule 30
	'['            reduce using rule 30


State 22

	OPNAME -> OP5 .                                     (rule 31)

	'if'           reduce using rule 31
	'while'        reduce using rule 31
	'fun'          reduce using rule 31
	'return'       reduce using rule 31
	'go'           reduce using rule 31
	'!'            reduce using rule 31
	OP1            reduce using rule 31
	OP2            reduce using rule 31
	OP3            reduce using rule 31
	OP4            reduce using rule 31
	OP5            reduce using rule 31
	OP6            reduce using rule 31
	OP7            reduce using rule 31
	NAME           reduce using rule 31
	LITERAL        reduce using rule 31
	NUMBER         reduce using rule 31
	'('            reduce using rule 31
	'['            reduce using rule 31


State 23

	OPNAME -> OP6 .                                     (rule 32)

	'if'           reduce using rule 32
	'while'        reduce using rule 32
	'fun'          reduce using rule 32
	'return'       reduce using rule 32
	'go'           reduce using rule 32
	'!'            reduce using rule 32
	OP1            reduce using rule 32
	OP2            reduce using rule 32
	OP3            reduce using rule 32
	OP4            reduce using rule 32
	OP5            reduce using rule 32
	OP6            reduce using rule 32
	OP7            reduce using rule 32
	NAME           reduce using rule 32
	LITERAL        reduce using rule 32
	NUMBER         reduce using rule 32
	'('            reduce using rule 32
	'['            reduce using rule 32


State 24

	OPNAME -> OP7 .                                     (rule 33)

	'if'           reduce using rule 33
	'while'        reduce using rule 33
	'fun'          reduce using rule 33
	'return'       reduce using rule 33
	'go'           reduce using rule 33
	'!'            reduce using rule 33
	OP1            reduce using rule 33
	OP2            reduce using rule 33
	OP3            reduce using rule 33
	OP4            reduce using rule 33
	OP5            reduce using rule 33
	OP6            reduce using rule 33
	OP7            reduce using rule 33
	NAME           reduce using rule 33
	LITERAL        reduce using rule 33
	NUMBER         reduce using rule 33
	'('            reduce using rule 33
	'['            reduce using rule 33


State 25

	expr -> NAME . '=' expr                             (rule 35)
	expr -> NAME .                                      (rule 48)
	expr -> NAME . '(' exprs ')'                        (rule 49)

	'||'           reduce using rule 48
	'&&'           reduce using rule 48
	OP1            reduce using rule 48
	OP2            reduce using rule 48
	OP3            reduce using rule 48
	OP4            reduce using rule 48
	OP5            reduce using rule 48
	OP6            reduce using rule 48
	OP7            reduce using rule 48
	'('            shift, and enter state 36
			(reduce using rule 48)

	')'            reduce using rule 48
	'}'            reduce using rule 48
	']'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'='            shift, and enter state 37
	%eof           reduce using rule 48


State 26

	expr -> LITERAL .                                   (rule 51)

	'||'           reduce using rule 51
	'&&'           reduce using rule 51
	OP1            reduce using rule 51
	OP2            reduce using rule 51
	OP3            reduce using rule 51
	OP4            reduce using rule 51
	OP5            reduce using rule 51
	OP6            reduce using rule 51
	OP7            reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'}'            reduce using rule 51
	']'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	%eof           reduce using rule 51


State 27

	expr -> NUMBER .                                    (rule 53)

	'||'           reduce using rule 53
	'&&'           reduce using rule 53
	OP1            reduce using rule 53
	OP2            reduce using rule 53
	OP3            reduce using rule 53
	OP4            reduce using rule 53
	OP5            reduce using rule 53
	OP6            reduce using rule 53
	OP7            reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'}'            reduce using rule 53
	']'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	%eof           reduce using rule 53


State 28

	expr -> '(' . expr ')'                              (rule 54)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 35
	ifcase         goto state 10

State 29

	expr -> '[' . exprs ']'                             (rule 52)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29
	']'            reduce using rule 64

	OPNAME         goto state 8
	expr           goto state 31
	ifcase         goto state 10
	exprs          goto state 32
	exprs1         goto state 33

State 30

	%start_getSyntaxTree -> program .                   (rule 0)

	%eof           accept


State 31

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)
	exprs1 -> expr . ',' exprs1                         (rule 65)
	exprs1 -> expr .                                    (rule 66)

	'||'           shift, and enter state 55
	'&&'           shift, and enter state 56
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            shift, and enter state 64
	')'            reduce using rule 66
	']'            reduce using rule 66
	','            shift, and enter state 96


State 32

	expr -> '[' exprs . ']'                             (rule 52)

	']'            shift, and enter state 95


State 33

	exprs -> exprs1 .                                   (rule 63)

	')'            reduce using rule 63
	']'            reduce using rule 63


State 34

	expr -> 'fun' . names_body                          (rule 57)

	'('            shift, and enter state 47

	names_body     goto state 43
	names_open     goto state 44

State 35

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)
	expr -> '(' expr . ')'                              (rule 54)

	'||'           shift, and enter state 55
	'&&'           shift, and enter state 56
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            shift, and enter state 64
	')'            shift, and enter state 94


State 36

	expr -> NAME '(' . exprs ')'                        (rule 49)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	')'            reduce using rule 64
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 31
	ifcase         goto state 10
	exprs          goto state 93
	exprs1         goto state 33

State 37

	expr -> NAME '=' . expr                             (rule 35)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 92
	ifcase         goto state 10

State 38

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> '!' expr .                                  (rule 39)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 39
	'&&'           reduce using rule 39
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            reduce using rule 39
	')'            reduce using rule 39
	'}'            reduce using rule 39
	']'            reduce using rule 39
	','            reduce using rule 39
	';'            reduce using rule 39
	%eof           reduce using rule 39


State 39

	expr -> 'go' body .                                 (rule 36)

	'||'           reduce using rule 36
	'&&'           reduce using rule 36
	OP1            reduce using rule 36
	OP2            reduce using rule 36
	OP3            reduce using rule 36
	OP4            reduce using rule 36
	OP5            reduce using rule 36
	OP6            reduce using rule 36
	OP7            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'}'            reduce using rule 36
	']'            reduce using rule 36
	','            reduce using rule 36
	';'            reduce using rule 36
	%eof           reduce using rule 36


State 40

	body -> open . stmts close                          (rule 13)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'var'          shift, and enter state 13
	'fun'          shift, and enter state 14
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	stmts          goto state 91
	stmt           goto state 3
	fundecl        goto state 4
	fun_NAME       goto state 5
	fun_OPNAME     goto state 6
	vardecl        goto state 7
	OPNAME         goto state 8
	expr           goto state 9
	ifcase         goto state 10

State 41

	open -> '{' .                                       (rule 15)

	'if'           reduce using rule 15
	'while'        reduce using rule 15
	'var'          reduce using rule 15
	'fun'          reduce using rule 15
	'return'       reduce using rule 15
	'go'           reduce using rule 15
	'!'            reduce using rule 15
	OP1            reduce using rule 15
	OP2            reduce using rule 15
	OP3            reduce using rule 15
	OP4            reduce using rule 15
	OP5            reduce using rule 15
	OP6            reduce using rule 15
	OP7            reduce using rule 15
	NAME           reduce using rule 15
	LITERAL        reduce using rule 15
	NUMBER         reduce using rule 15
	'('            reduce using rule 15
	'['            reduce using rule 15


State 42

	expr -> 'return' expr .                             (rule 34)
	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           shift, and enter state 55
	'&&'           shift, and enter state 56
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            shift, and enter state 64
	')'            reduce using rule 34
	'}'            reduce using rule 34
	']'            reduce using rule 34
	','            reduce using rule 34
	';'            reduce using rule 34
	%eof           reduce using rule 34


State 43

	expr -> 'fun' names_body .                          (rule 57)

	'||'           reduce using rule 57
	'&&'           reduce using rule 57
	OP1            reduce using rule 57
	OP2            reduce using rule 57
	OP3            reduce using rule 57
	OP4            reduce using rule 57
	OP5            reduce using rule 57
	OP6            reduce using rule 57
	OP7            reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'}'            reduce using rule 57
	']'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	%eof           reduce using rule 57


State 44

	names_body -> names_open . stmts close              (rule 14)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'var'          shift, and enter state 13
	'fun'          shift, and enter state 14
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	stmts          goto state 90
	stmt           goto state 3
	fundecl        goto state 4
	fun_NAME       goto state 5
	fun_OPNAME     goto state 6
	vardecl        goto state 7
	OPNAME         goto state 8
	expr           goto state 9
	ifcase         goto state 10

State 45

	fun_OPNAME -> 'fun' OPNAME .                        (rule 21)

	'('            reduce using rule 21


State 46

	fun_NAME -> 'fun' NAME .                            (rule 20)

	'('            reduce using rule 20


State 47

	names_open -> '(' . names ')' '{'                   (rule 16)

	NAME           shift, and enter state 89
	')'            reduce using rule 10

	names          goto state 87
	names1         goto state 88

State 48

	vardecl -> 'var' vardecls .                         (rule 22)

	'}'            reduce using rule 22
	';'            reduce using rule 22
	%eof           reduce using rule 22


State 49

	vardecls -> declOrInit . ',' vardecls               (rule 23)
	vardecls -> declOrInit .                            (rule 24)

	'}'            reduce using rule 24
	','            shift, and enter state 86
	';'            reduce using rule 24
	%eof           reduce using rule 24


State 50

	declOrInit -> NAME .                                (rule 25)
	declOrInit -> NAME . '=' expr                       (rule 26)

	'}'            reduce using rule 25
	','            reduce using rule 25
	';'            reduce using rule 25
	'='            shift, and enter state 85
	%eof           reduce using rule 25


State 51

	expr -> 'while' '(' . expr ')' body                 (rule 56)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 84
	ifcase         goto state 10

State 52

	ifcase -> 'if' '(' . expr ')' body                  (rule 58)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 83
	ifcase         goto state 10

State 53

	expr -> ifcase elseifs . elsecase                   (rule 55)

	'else'         shift, and enter state 82
	'||'           reduce using rule 62
	'&&'           reduce using rule 62
	OP1            reduce using rule 62
	OP2            reduce using rule 62
	OP3            reduce using rule 62
	OP4            reduce using rule 62
	OP5            reduce using rule 62
	OP6            reduce using rule 62
	OP7            reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'}'            reduce using rule 62
	']'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62
	%eof           reduce using rule 62

	elsecase       goto state 81

State 54

	elseifs -> 'elsif' . '(' expr ')' body elseifs      (rule 59)

	'('            shift, and enter state 80


State 55

	expr -> expr '||' . expr                            (rule 37)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 79
	ifcase         goto state 10

State 56

	expr -> expr '&&' . expr                            (rule 38)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 78
	ifcase         goto state 10

State 57

	expr -> expr OP1 . expr                             (rule 40)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 77
	ifcase         goto state 10

State 58

	expr -> expr OP2 . expr                             (rule 41)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 76
	ifcase         goto state 10

State 59

	expr -> expr OP3 . expr                             (rule 42)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 75
	ifcase         goto state 10

State 60

	expr -> expr OP4 . expr                             (rule 43)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 74
	ifcase         goto state 10

State 61

	expr -> expr OP5 . expr                             (rule 44)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 73
	ifcase         goto state 10

State 62

	expr -> expr OP6 . expr                             (rule 45)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 72
	ifcase         goto state 10

State 63

	expr -> expr OP7 . expr                             (rule 46)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 71
	ifcase         goto state 10

State 64

	expr -> expr '(' . exprs ')'                        (rule 50)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	')'            reduce using rule 64
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 31
	ifcase         goto state 10
	exprs          goto state 70
	exprs1         goto state 33

State 65

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> OPNAME expr .                               (rule 47)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 47
	'&&'           reduce using rule 47
	OP1            reduce using rule 47
	OP2            reduce using rule 47
	OP3            reduce using rule 47
	OP4            reduce using rule 47
	OP5            reduce using rule 47
	OP6            reduce using rule 47
	OP7            reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'}'            reduce using rule 47
	']'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	%eof           reduce using rule 47


State 66

	fundecl -> fun_OPNAME names_body .                  (rule 19)

	'}'            reduce using rule 19
	';'            reduce using rule 19
	%eof           reduce using rule 19


State 67

	fundecl -> fun_NAME names_body .                    (rule 18)

	'}'            reduce using rule 18
	';'            reduce using rule 18
	%eof           reduce using rule 18


State 68

	stmts -> stmt scs . ';' stmts                       (rule 2)
	stmts -> stmt scs .                                 (rule 3)
	scs -> scs . ';'                                    (rule 7)

	'}'            reduce using rule 3
	';'            shift, and enter state 69
	%eof           reduce using rule 3


State 69

	stmts -> stmt scs ';' . stmts                       (rule 2)
	scs -> scs ';' .                                    (rule 7)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'var'          shift, and enter state 13
	'fun'          shift, and enter state 14
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'}'            reduce using rule 7
	'['            shift, and enter state 29
	';'            reduce using rule 7
	%eof           reduce using rule 7

	stmts          goto state 111
	stmt           goto state 3
	fundecl        goto state 4
	fun_NAME       goto state 5
	fun_OPNAME     goto state 6
	vardecl        goto state 7
	OPNAME         goto state 8
	expr           goto state 9
	ifcase         goto state 10

State 70

	expr -> expr '(' exprs . ')'                        (rule 50)

	')'            shift, and enter state 110


State 71

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr OP7 expr .                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 46
	'&&'           reduce using rule 46
	OP1            reduce using rule 46
	OP2            reduce using rule 46
	OP3            reduce using rule 46
	OP4            reduce using rule 46
	OP5            reduce using rule 46
	OP6            reduce using rule 46
	OP7            reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'}'            reduce using rule 46
	']'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	%eof           reduce using rule 46


State 72

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr OP6 expr .                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 45
	'&&'           reduce using rule 45
	OP1            reduce using rule 45
	OP2            reduce using rule 45
	OP3            reduce using rule 45
	OP4            reduce using rule 45
	OP5            reduce using rule 45
	OP6            reduce using rule 45
	OP7            shift, and enter state 63
	'('            reduce using rule 45
	')'            reduce using rule 45
	'}'            reduce using rule 45
	']'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	%eof           reduce using rule 45


State 73

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr OP5 expr .                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 44
	'&&'           reduce using rule 44
	OP1            reduce using rule 44
	OP2            reduce using rule 44
	OP3            reduce using rule 44
	OP4            reduce using rule 44
	OP5            reduce using rule 44
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            reduce using rule 44
	')'            reduce using rule 44
	'}'            reduce using rule 44
	']'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	%eof           reduce using rule 44


State 74

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr OP4 expr .                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 43
	'&&'           reduce using rule 43
	OP1            reduce using rule 43
	OP2            reduce using rule 43
	OP3            reduce using rule 43
	OP4            reduce using rule 43
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            reduce using rule 43
	')'            reduce using rule 43
	'}'            reduce using rule 43
	']'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	%eof           reduce using rule 43


State 75

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr OP3 expr .                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 42
	'&&'           reduce using rule 42
	OP1            reduce using rule 42
	OP2            reduce using rule 42
	OP3            reduce using rule 42
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            reduce using rule 42
	')'            reduce using rule 42
	'}'            reduce using rule 42
	']'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	%eof           reduce using rule 42


State 76

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr OP2 expr .                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 41
	'&&'           reduce using rule 41
	OP1            reduce using rule 41
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            reduce using rule 41
	')'            reduce using rule 41
	'}'            reduce using rule 41
	']'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	%eof           reduce using rule 41


State 77

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr OP1 expr .                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 40
	'&&'           reduce using rule 40
	OP1            reduce using rule 40
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            reduce using rule 40
	')'            reduce using rule 40
	'}'            reduce using rule 40
	']'            reduce using rule 40
	','            reduce using rule 40
	';'            reduce using rule 40
	%eof           reduce using rule 40


State 78

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr '&&' expr .                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 38
	'&&'           reduce using rule 38
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            reduce using rule 38
	')'            reduce using rule 38
	'}'            reduce using rule 38
	']'            reduce using rule 38
	','            reduce using rule 38
	';'            reduce using rule 38
	%eof           reduce using rule 38


State 79

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr '||' expr .                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           reduce using rule 37
	'&&'           shift, and enter state 56
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            reduce using rule 37
	')'            reduce using rule 37
	'}'            reduce using rule 37
	']'            reduce using rule 37
	','            reduce using rule 37
	';'            reduce using rule 37
	%eof           reduce using rule 37


State 80

	elseifs -> 'elsif' '(' . expr ')' body elseifs      (rule 59)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 109
	ifcase         goto state 10

State 81

	expr -> ifcase elseifs elsecase .                   (rule 55)

	'||'           reduce using rule 55
	'&&'           reduce using rule 55
	OP1            reduce using rule 55
	OP2            reduce using rule 55
	OP3            reduce using rule 55
	OP4            reduce using rule 55
	OP5            reduce using rule 55
	OP6            reduce using rule 55
	OP7            reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'}'            reduce using rule 55
	']'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	%eof           reduce using rule 55


State 82

	elsecase -> 'else' . body                           (rule 61)

	'{'            shift, and enter state 41

	body           goto state 108
	open           goto state 40

State 83

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)
	ifcase -> 'if' '(' expr . ')' body                  (rule 58)

	'||'           shift, and enter state 55
	'&&'           shift, and enter state 56
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            shift, and enter state 64
	')'            shift, and enter state 107


State 84

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)
	expr -> 'while' '(' expr . ')' body                 (rule 56)

	'||'           shift, and enter state 55
	'&&'           shift, and enter state 56
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            shift, and enter state 64
	')'            shift, and enter state 106


State 85

	declOrInit -> NAME '=' . expr                       (rule 26)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 105
	ifcase         goto state 10

State 86

	vardecls -> declOrInit ',' . vardecls               (rule 23)

	NAME           shift, and enter state 50

	vardecls       goto state 104
	declOrInit     goto state 49

State 87

	names_open -> '(' names . ')' '{'                   (rule 16)

	')'            shift, and enter state 103


State 88

	names -> names1 .                                   (rule 9)
	names1 -> names1 . ',' NAME                         (rule 11)

	')'            reduce using rule 9
	','            shift, and enter state 102


State 89

	names1 -> NAME .                                    (rule 12)

	')'            reduce using rule 12
	','            reduce using rule 12


State 90

	names_body -> names_open stmts . close              (rule 14)

	'}'            shift, and enter state 100

	close          goto state 101

State 91

	body -> open stmts . close                          (rule 13)

	'}'            shift, and enter state 100

	close          goto state 99

State 92

	expr -> NAME '=' expr .                             (rule 35)
	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           shift, and enter state 55
	'&&'           shift, and enter state 56
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            shift, and enter state 64
	')'            reduce using rule 35
	'}'            reduce using rule 35
	']'            reduce using rule 35
	','            reduce using rule 35
	';'            reduce using rule 35
	%eof           reduce using rule 35


State 93

	expr -> NAME '(' exprs . ')'                        (rule 49)

	')'            shift, and enter state 98


State 94

	expr -> '(' expr ')' .                              (rule 54)

	'||'           reduce using rule 54
	'&&'           reduce using rule 54
	OP1            reduce using rule 54
	OP2            reduce using rule 54
	OP3            reduce using rule 54
	OP4            reduce using rule 54
	OP5            reduce using rule 54
	OP6            reduce using rule 54
	OP7            reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'}'            reduce using rule 54
	']'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	%eof           reduce using rule 54


State 95

	expr -> '[' exprs ']' .                             (rule 52)

	'||'           reduce using rule 52
	'&&'           reduce using rule 52
	OP1            reduce using rule 52
	OP2            reduce using rule 52
	OP3            reduce using rule 52
	OP4            reduce using rule 52
	OP5            reduce using rule 52
	OP6            reduce using rule 52
	OP7            reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'}'            reduce using rule 52
	']'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	%eof           reduce using rule 52


State 96

	exprs1 -> expr ',' . exprs1                         (rule 65)

	'if'           shift, and enter state 11
	'while'        shift, and enter state 12
	'fun'          shift, and enter state 34
	'return'       shift, and enter state 15
	'go'           shift, and enter state 16
	'!'            shift, and enter state 17
	OP1            shift, and enter state 18
	OP2            shift, and enter state 19
	OP3            shift, and enter state 20
	OP4            shift, and enter state 21
	OP5            shift, and enter state 22
	OP6            shift, and enter state 23
	OP7            shift, and enter state 24
	NAME           shift, and enter state 25
	LITERAL        shift, and enter state 26
	NUMBER         shift, and enter state 27
	'('            shift, and enter state 28
	'['            shift, and enter state 29

	OPNAME         goto state 8
	expr           goto state 31
	ifcase         goto state 10
	exprs1         goto state 97

State 97

	exprs1 -> expr ',' exprs1 .                         (rule 65)

	')'            reduce using rule 65
	']'            reduce using rule 65


State 98

	expr -> NAME '(' exprs ')' .                        (rule 49)

	'||'           reduce using rule 49
	'&&'           reduce using rule 49
	OP1            reduce using rule 49
	OP2            reduce using rule 49
	OP3            reduce using rule 49
	OP4            reduce using rule 49
	OP5            reduce using rule 49
	OP6            reduce using rule 49
	OP7            reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'}'            reduce using rule 49
	']'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	%eof           reduce using rule 49


State 99

	body -> open stmts close .                          (rule 13)

	'else'         reduce using rule 13
	'elsif'        reduce using rule 13
	'||'           reduce using rule 13
	'&&'           reduce using rule 13
	OP1            reduce using rule 13
	OP2            reduce using rule 13
	OP3            reduce using rule 13
	OP4            reduce using rule 13
	OP5            reduce using rule 13
	OP6            reduce using rule 13
	OP7            reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'}'            reduce using rule 13
	']'            reduce using rule 13
	','            reduce using rule 13
	';'            reduce using rule 13
	%eof           reduce using rule 13


State 100

	close -> '}' .                                      (rule 17)

	'else'         reduce using rule 17
	'elsif'        reduce using rule 17
	'||'           reduce using rule 17
	'&&'           reduce using rule 17
	OP1            reduce using rule 17
	OP2            reduce using rule 17
	OP3            reduce using rule 17
	OP4            reduce using rule 17
	OP5            reduce using rule 17
	OP6            reduce using rule 17
	OP7            reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'}'            reduce using rule 17
	']'            reduce using rule 17
	','            reduce using rule 17
	';'            reduce using rule 17
	%eof           reduce using rule 17


State 101

	names_body -> names_open stmts close .              (rule 14)

	'||'           reduce using rule 14
	'&&'           reduce using rule 14
	OP1            reduce using rule 14
	OP2            reduce using rule 14
	OP3            reduce using rule 14
	OP4            reduce using rule 14
	OP5            reduce using rule 14
	OP6            reduce using rule 14
	OP7            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	'}'            reduce using rule 14
	']'            reduce using rule 14
	','            reduce using rule 14
	';'            reduce using rule 14
	%eof           reduce using rule 14


State 102

	names1 -> names1 ',' . NAME                         (rule 11)

	NAME           shift, and enter state 116


State 103

	names_open -> '(' names ')' . '{'                   (rule 16)

	'{'            shift, and enter state 115


State 104

	vardecls -> declOrInit ',' vardecls .               (rule 23)

	'}'            reduce using rule 23
	';'            reduce using rule 23
	%eof           reduce using rule 23


State 105

	declOrInit -> NAME '=' expr .                       (rule 26)
	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)

	'||'           shift, and enter state 55
	'&&'           shift, and enter state 56
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            shift, and enter state 64
	'}'            reduce using rule 26
	','            reduce using rule 26
	';'            reduce using rule 26
	%eof           reduce using rule 26


State 106

	expr -> 'while' '(' expr ')' . body                 (rule 56)

	'{'            shift, and enter state 41

	body           goto state 114
	open           goto state 40

State 107

	ifcase -> 'if' '(' expr ')' . body                  (rule 58)

	'{'            shift, and enter state 41

	body           goto state 113
	open           goto state 40

State 108

	elsecase -> 'else' body .                           (rule 61)

	'||'           reduce using rule 61
	'&&'           reduce using rule 61
	OP1            reduce using rule 61
	OP2            reduce using rule 61
	OP3            reduce using rule 61
	OP4            reduce using rule 61
	OP5            reduce using rule 61
	OP6            reduce using rule 61
	OP7            reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'}'            reduce using rule 61
	']'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	%eof           reduce using rule 61


State 109

	expr -> expr . '||' expr                            (rule 37)
	expr -> expr . '&&' expr                            (rule 38)
	expr -> expr . OP1 expr                             (rule 40)
	expr -> expr . OP2 expr                             (rule 41)
	expr -> expr . OP3 expr                             (rule 42)
	expr -> expr . OP4 expr                             (rule 43)
	expr -> expr . OP5 expr                             (rule 44)
	expr -> expr . OP6 expr                             (rule 45)
	expr -> expr . OP7 expr                             (rule 46)
	expr -> expr . '(' exprs ')'                        (rule 50)
	elseifs -> 'elsif' '(' expr . ')' body elseifs      (rule 59)

	'||'           shift, and enter state 55
	'&&'           shift, and enter state 56
	OP1            shift, and enter state 57
	OP2            shift, and enter state 58
	OP3            shift, and enter state 59
	OP4            shift, and enter state 60
	OP5            shift, and enter state 61
	OP6            shift, and enter state 62
	OP7            shift, and enter state 63
	'('            shift, and enter state 64
	')'            shift, and enter state 112


State 110

	expr -> expr '(' exprs ')' .                        (rule 50)

	'||'           reduce using rule 50
	'&&'           reduce using rule 50
	OP1            reduce using rule 50
	OP2            reduce using rule 50
	OP3            reduce using rule 50
	OP4            reduce using rule 50
	OP5            reduce using rule 50
	OP6            reduce using rule 50
	OP7            reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'}'            reduce using rule 50
	']'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	%eof           reduce using rule 50


State 111

	stmts -> stmt scs ';' stmts .                       (rule 2)

	'}'            reduce using rule 2
	%eof           reduce using rule 2


State 112

	elseifs -> 'elsif' '(' expr ')' . body elseifs      (rule 59)

	'{'            shift, and enter state 41

	body           goto state 117
	open           goto state 40

State 113

	ifcase -> 'if' '(' expr ')' body .                  (rule 58)

	'else'         reduce using rule 58
	'elsif'        reduce using rule 58
	'||'           reduce using rule 58
	'&&'           reduce using rule 58
	OP1            reduce using rule 58
	OP2            reduce using rule 58
	OP3            reduce using rule 58
	OP4            reduce using rule 58
	OP5            reduce using rule 58
	OP6            reduce using rule 58
	OP7            reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'}'            reduce using rule 58
	']'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	%eof           reduce using rule 58


State 114

	expr -> 'while' '(' expr ')' body .                 (rule 56)

	'||'           reduce using rule 56
	'&&'           reduce using rule 56
	OP1            reduce using rule 56
	OP2            reduce using rule 56
	OP3            reduce using rule 56
	OP4            reduce using rule 56
	OP5            reduce using rule 56
	OP6            reduce using rule 56
	OP7            reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'}'            reduce using rule 56
	']'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	%eof           reduce using rule 56


State 115

	names_open -> '(' names ')' '{' .                   (rule 16)

	'if'           reduce using rule 16
	'while'        reduce using rule 16
	'var'          reduce using rule 16
	'fun'          reduce using rule 16
	'return'       reduce using rule 16
	'go'           reduce using rule 16
	'!'            reduce using rule 16
	OP1            reduce using rule 16
	OP2            reduce using rule 16
	OP3            reduce using rule 16
	OP4            reduce using rule 16
	OP5            reduce using rule 16
	OP6            reduce using rule 16
	OP7            reduce using rule 16
	NAME           reduce using rule 16
	LITERAL        reduce using rule 16
	NUMBER         reduce using rule 16
	'('            reduce using rule 16
	'['            reduce using rule 16


State 116

	names1 -> names1 ',' NAME .                         (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11


State 117

	elseifs -> 'elsif' '(' expr ')' body . elseifs      (rule 59)

	'else'         reduce using rule 60
	'elsif'        shift, and enter state 54
	'||'           reduce using rule 60
	'&&'           reduce using rule 60
	OP1            reduce using rule 60
	OP2            reduce using rule 60
	OP3            reduce using rule 60
	OP4            reduce using rule 60
	OP5            reduce using rule 60
	OP6            reduce using rule 60
	OP7            reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'}'            reduce using rule 60
	']'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	%eof           reduce using rule 60

	elseifs        goto state 118

State 118

	elseifs -> 'elsif' '(' expr ')' body elseifs .      (rule 59)

	'else'         reduce using rule 59
	'||'           reduce using rule 59
	'&&'           reduce using rule 59
	OP1            reduce using rule 59
	OP2            reduce using rule 59
	OP3            reduce using rule 59
	OP4            reduce using rule 59
	OP5            reduce using rule 59
	OP6            reduce using rule 59
	OP7            reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'}'            reduce using rule 59
	']'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	%eof           reduce using rule 59


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 67
Number of terminals: 30
Number of non-terminals: 25
Number of states: 119
